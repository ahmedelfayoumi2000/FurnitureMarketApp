// <auto-generated />
using System;
using FurnitureMarketApp.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FurnitureMarketApp.Infrastructure.Migrations
{
    [DbContext(typeof(FurnitureMarketContext))]
    partial class FurnitureMarketContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Favorite", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_item")
                        .HasColumnType("int");

                    b.Property<int>("ID_user")
                        .HasColumnType("int");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_item");

                    b.HasIndex("ID_user");

                    b.ToTable("Favorites");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.FurnitureItem", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("category")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("imageURL")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("FurnitureItems");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Message", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_user")
                        .HasColumnType("int");

                    b.Property<string>("content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("date")
                        .HasColumnType("datetime2");

                    b.HasKey("ID");

                    b.HasIndex("ID_user");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Offer", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ID_item")
                        .HasColumnType("int");

                    b.Property<int>("ID_user")
                        .HasColumnType("int");

                    b.Property<decimal>("offerPrice")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ID_item");

                    b.HasIndex("ID_user");

                    b.ToTable("Offers");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("user_phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Favorite", b =>
                {
                    b.HasOne("FurnitureMarketApp.Domain.Entities.FurnitureItem", "FurnitureItem")
                        .WithMany("Favorites")
                        .HasForeignKey("ID_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureMarketApp.Domain.Entities.User", "User")
                        .WithMany("Favorites")
                        .HasForeignKey("ID_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FurnitureItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Message", b =>
                {
                    b.HasOne("FurnitureMarketApp.Domain.Entities.User", "User")
                        .WithMany("Messages")
                        .HasForeignKey("ID_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.Offer", b =>
                {
                    b.HasOne("FurnitureMarketApp.Domain.Entities.FurnitureItem", "FurnitureItem")
                        .WithMany("Offers")
                        .HasForeignKey("ID_item")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("FurnitureMarketApp.Domain.Entities.User", "User")
                        .WithMany("Offers")
                        .HasForeignKey("ID_user")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FurnitureItem");

                    b.Navigation("User");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.FurnitureItem", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Offers");
                });

            modelBuilder.Entity("FurnitureMarketApp.Domain.Entities.User", b =>
                {
                    b.Navigation("Favorites");

                    b.Navigation("Messages");

                    b.Navigation("Offers");
                });
#pragma warning restore 612, 618
        }
    }
}
